name: Doc

on:
  push:
    branches:
      - main
      - doc

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    # Standard drop-in approach that should work for most people.
    - uses: newlogic/sphinx-action@master
      with:
        docs-folder: "docs/"
#    # Grabbing custom dependencies and building as a pdf.
#    - uses: newlogic/sphinx-action@master
#      with:
#        build-command: "make latexpdf"
#        docs-folder: "docs/"
#    # Create an artifact out of the previously built pdf.
#    - uses: actions/upload-artifact@v1
#      with:
#        name: Documentation
#        path: docs/build/latex/newlogic-g2p.pdf
    # Publish built docs to gh-pages branch.
    # ===============================
    - name: Commit documentation changes
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html
#      run: |
#        git clone https://x-access-token:${{ secrets.GIT_PUSH_TOKEN }}@github.com/${{ github.repository }}.git --branch gh-pages --single-branch gh-pages
#        cp -r docs/_build/html/* gh-pages/
#        cd gh-pages
#        touch .nojekyll
#        git config --local user.email "action@github.com"
#        git config --local user.name "GitHub Action"
#        git add .
#        git commit -m "Update documentation" -a || true
#        # The above command will fail if no changes were present, so we ignore
#        # that.
#    - name: Push changes
#      uses: ad-m/github-push-action@master
#      with:
#        branch: gh-pages
#        directory: gh-pages
#        github_token: ${{ secrets.GITHUB_TOKEN }}
#    # ===============================
